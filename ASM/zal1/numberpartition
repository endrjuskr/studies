POS_SIGN  equ 63
POS_EX    equ 52

section .text
					global get_significant, get_exp, get_sign
get_significant:	; Gets significant from number which is represented by bits 52..0
					enter 0, 0
					mov rax, [rsp + 16] ; First argument
					mov rbx, 1
					shl rbx, POS_EX
					sub rbx, 1 			
					and rax, rbx 		; Collect only last 52 bits
					mov rbx, 1
					shl rbx, POS_EX
					or  rax, rbx    ; Add 1 to number
					leave
					ret
get_exp:			; Gets exponential from number which is represented by bits 63..53 with added 1023
					enter 0, 0
					mov rax, [rsp + 16] ; First argument
					mov rbx, 1
					shl rbx, 12
					sub rbx, 1 
					shr rbx, POS_EX
					and rax, rbx 		; Collect bits 63..53
					leave
					ret
get_sign:			; Gets sign of number which is represented by bit 64
					enter 0, 0
					mov rax, [rsp + 16] ; First argument
					shr rbx, POS_SIGN
					leave
					ret