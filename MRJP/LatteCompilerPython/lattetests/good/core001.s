; Code generated by LatteCompiler
.text
global _main
extern printInt, printString, readInt, readString, error
_main:
enter 0, 0
mov rax, 10
push rax
call fac
add rsp, 4
push rax
call printInt
add rsp, 4
push rax
mov rax, 10
push rax
call rfac
add rsp, 4
push rax
call printInt
add rsp, 4
push rax
mov rax, 10
push rax
call mfac
add rsp, 4
push rax
call printInt
add rsp, 4
push rax
mov rax, 10
push rax
call ifac
add rsp, 4
push rax
call printInt
add rsp, 4
push rax
ldc 10 
ldc 1 
while_10_181_w:
mov rax, [rsp - 8]
push rax
mov rax, 0
push rax
pop rbx
pop rax
cmp rax, rbx
jg cmp_10_188_t
goto cmp_10_188_f
cmp_10_188_t:
mov rax, 1
goto cmp_10_188
cmp_10_188_f:
mov rax, 0
cmp_10_188:
push rax
pop rax
cmp rax, 0
je while_10_181
mov rax, [rsp - 4]
push rax
mov rax, [rsp - 12]
push rax
pop rbx
pop rax
mov rdx, 0
imul rax, rbx
push rax
pop rax
mov [rsp - 4], rax
inc [rsp - 8]
goto while_10_181_w
while_10_181:
mov rax, [rsp - 4]
push rax
call printInt
add rsp, 4
push rax
mov rax, 60
push rax
push dword [string_0]
call repStr
add rsp, 8
push rax
call printString
add rsp, 4
push rax
push dword [string_1]
call printString
add rsp, 4
push rax
push dword [string_2]
call printString
add rsp, 4
push rax
mov rax, 0
push rax
pop rax
leave
ret
fac:
enter 0, 0
mov rax, 0
push rax
mov rax, 0
push rax
mov rax, 1
push rax
pop rax
mov [rsp - 8], rax
mov rax, [rsp - 12]
push rax
pop rax
mov [rsp - 4], rax
while_28_413_w:
mov rax, [rsp - 4]
push rax
mov rax, 0
push rax
pop rbx
pop rax
cmp rax, rbx
jg cmp_28_420_t
goto cmp_28_420_f
cmp_28_420_t:
mov rax, 1
goto cmp_28_420
cmp_28_420_f:
mov rax, 0
cmp_28_420:
push rax
pop rax
cmp rax, 0
je while_28_413
mov rax, [rsp - 8]
push rax
mov rax, [rsp - 8]
push rax
pop rbx
pop rax
mov rdx, 0
imul rax, rbx
push rax
pop rax
mov [rsp - 8], rax
mov rax, [rsp - 4]
push rax
mov rax, 1
push rax
pop rbx
pop rax
sub rax, rbx
push rax
pop rax
mov [rsp - 4], rax
goto while_28_413_w
while_28_413:
mov rax, [rsp - 8]
push rax
pop rax
leave
ret
rfac:
enter 0, 0
mov rax, [rsp - 4]
push rax
mov rax, 0
push rax
pop rbx
pop rax
cmp rax, rbx
je cmp_36_497_t
goto cmp_36_497_f
cmp_36_497_t:
mov rax, 1
goto cmp_36_497
cmp_36_497_f:
mov rax, 0
cmp_36_497:
push rax
pop rax
cmp rax, 0
je condelse_36_493_f
mov rax, 1
push rax
pop rax
leave
ret
goto condelse_36_493
condelse_36_493_f:
mov rax, [rsp - 4]
push rax
mov rax, [rsp - 8]
push rax
mov rax, 1
push rax
pop rbx
pop rax
sub rax, rbx
push rax
call rfac
add rsp, 4
push rax
pop rbx
pop rax
mov rdx, 0
imul rax, rbx
push rax
pop rax
leave
ret
condelse_36_493:
mfac:
enter 0, 0
mov rax, [rsp - 4]
push rax
mov rax, 0
push rax
pop rbx
pop rax
cmp rax, rbx
je cmp_43_575_t
goto cmp_43_575_f
cmp_43_575_t:
mov rax, 1
goto cmp_43_575
cmp_43_575_f:
mov rax, 0
cmp_43_575:
push rax
pop rax
cmp rax, 0
je condelse_43_571_f
mov rax, 1
push rax
pop rax
leave
ret
goto condelse_43_571
condelse_43_571_f:
mov rax, [rsp - 4]
push rax
mov rax, [rsp - 8]
push rax
mov rax, 1
push rax
pop rbx
pop rax
sub rax, rbx
push rax
call nfac
add rsp, 4
push rax
pop rbx
pop rax
mov rdx, 0
imul rax, rbx
push rax
pop rax
leave
ret
condelse_43_571:
nfac:
enter 0, 0
mov rax, [rsp - 4]
push rax
mov rax, 0
push rax
pop rbx
pop rax
cmp rax, rbx
jne cmp_50_653_t
goto cmp_50_653_f
cmp_50_653_t:
mov rax, 1
goto cmp_50_653
cmp_50_653_f:
mov rax, 0
cmp_50_653:
push rax
pop rax
cmp rax, 0
je condelse_50_649_f
mov rax, [rsp - 4]
push rax
mov rax, 1
push rax
pop rbx
pop rax
sub rax, rbx
push rax
call mfac
add rsp, 4
push rax
mov rax, [rsp - 8]
push rax
pop rbx
pop rax
mov rdx, 0
imul rax, rbx
push rax
pop rax
leave
ret
goto condelse_50_649
condelse_50_649_f:
mov rax, 1
push rax
pop rax
leave
ret
condelse_50_649:
ifac:
enter 0, 0
mov rax, [rsp - 4]
push rax
mov rax, 1
push rax
call ifac2f
add rsp, 8
push rax
pop rax
leave
ret
ifac2f:
enter 0, 0
mov rax, [rsp - 8]
push rax
mov rax, [rsp - 8]
push rax
pop rbx
pop rax
cmp rax, rbx
je cmp_59_788_t
goto cmp_59_788_f
cmp_59_788_t:
mov rax, 1
goto cmp_59_788
cmp_59_788_f:
mov rax, 0
cmp_59_788:
push rax
pop rax
cmp rax, 0
je cond_59_784
mov rax, [rsp - 8]
push rax
pop rax
leave
ret
cond_59_784:
mov rax, [rsp - 8]
push rax
mov rax, [rsp - 8]
push rax
pop rbx
pop rax
cmp rax, rbx
jg cmp_61_828_t
goto cmp_61_828_f
cmp_61_828_t:
mov rax, 1
goto cmp_61_828
cmp_61_828_f:
mov rax, 0
cmp_61_828:
push rax
pop rax
cmp rax, 0
je cond_61_824
mov rax, 1
push rax
pop rax
leave
ret
cond_61_824:
mov rax, 0
push rax
mov rax, [rsp - 12]
push rax
mov rax, [rsp - 12]
push rax
pop rbx
pop rax
add rax, rbx
push rax
mov rax, 2
push rax
pop rbx
pop rax
mov rdx, 0
idiv rbx
push rax
pop rax
mov [rsp - 4], rax
mov rax, [rsp - 4]
push rax
mov rax, [rsp - 16]
push rax
call ifac2f
add rsp, 8
push rax
mov rax, [rsp - 12]
push rax
mov rax, [rsp - 12]
push rax
mov rax, 1
push rax
pop rbx
pop rax
add rax, rbx
push rax
call ifac2f
add rsp, 8
push rax
pop rbx
pop rax
mov rdx, 0
imul rax, rbx
push rax
pop rax
leave
ret
repStr:
enter 0, 0
ldc ""
ldc 0 
while_71_1007_w:
mov rax, [rsp - 4]
push rax
mov rax, [rsp - 16]
push rax
pop rbx
pop rax
cmp rax, rbx
jl cmp_71_1013_t
goto cmp_71_1013_f
cmp_71_1013_t:
mov rax, 1
goto cmp_71_1013
cmp_71_1013_f:
mov rax, 0
cmp_71_1013:
push rax
pop rax
cmp rax, 0
je while_71_1007
mov rax, [rsp - 8]
push rax
mov rax, [rsp - 20]
push rax
pop rbx
pop rax
push rax
pop rax
mov [rsp - 8], rax
dec [rsp - 4]
goto while_71_1007_w
while_71_1007:
mov rax, [rsp - 8]
push rax
pop rax
leave
ret
.data
string_2: dd "/* world",0
string_0: dd "=",0
string_1: dd "hello */",0
