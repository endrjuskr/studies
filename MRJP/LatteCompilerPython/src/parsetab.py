
# src/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'B\x00\xde\xf5\xf0N\x15\xc4m\xafh\x01v\x14\x97S'
    
_lr_action_items = {'DIVIDE':([39,42,47,48,49,53,56,58,72,73,95,103,110,112,113,119,129,134,135,140,145,],[-46,-48,-55,87,-57,-53,-43,-49,-42,-54,-43,-56,87,-44,-61,-52,-45,-47,-50,-41,-51,]),'RETURN':([30,38,43,51,54,62,66,68,69,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[37,37,-28,-26,-8,-29,-35,-27,-9,-39,-34,-30,-32,-33,37,37,-31,-38,-36,37,37,-37,-40,]),'VOID':([0,1,3,11,16,22,25,27,28,30,31,33,35,38,41,43,51,54,62,64,65,66,68,69,94,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[2,-6,2,-7,2,2,2,2,-11,2,-25,-12,2,2,2,-28,-26,-8,-29,-24,-21,-35,-27,-9,2,-39,-34,-30,-32,-33,2,2,-31,-38,-36,2,2,-37,-40,]),'NUMBER':([30,37,38,43,44,51,54,55,60,62,66,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,97,98,101,102,104,105,107,115,116,123,124,127,130,136,137,138,139,142,144,147,148,149,150,],[39,39,39,-28,39,-26,-8,39,39,-29,-35,-27,-9,39,39,-68,-67,39,-69,-71,-66,-70,-62,-63,39,39,-59,-58,39,-60,39,39,39,-39,39,-34,39,-30,39,-32,-33,39,39,39,39,-31,-38,39,-36,39,39,-37,-40,]),'WHILE':([30,38,43,51,54,62,66,68,69,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[40,40,-28,-26,-8,-29,-35,-27,-9,-39,-34,-30,-32,-33,40,40,-31,-38,-36,40,40,-37,-40,]),'NEW':([30,37,38,43,44,51,54,55,60,62,66,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,97,98,101,102,104,105,107,115,116,123,124,127,130,136,137,138,139,142,144,147,148,149,150,],[41,41,41,-28,41,-26,-8,41,41,-29,-35,-27,-9,41,41,-68,-67,41,-69,-71,-66,-70,-62,-63,41,41,-59,-58,41,-60,41,41,41,-39,41,-34,41,-30,41,-32,-33,41,41,41,41,-31,-38,41,-36,41,41,-37,-40,]),'NULL':([118,],[134,]),'TRUE':([30,37,38,43,44,51,54,55,60,62,66,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,97,98,101,102,104,105,107,115,116,123,124,127,130,136,137,138,139,142,144,147,148,149,150,],[42,42,42,-28,42,-26,-8,42,42,-29,-35,-27,-9,42,42,-68,-67,42,-69,-71,-66,-70,-62,-63,42,42,-59,-58,42,-60,42,42,42,-39,42,-34,42,-30,42,-32,-33,42,42,42,42,-31,-38,42,-36,42,42,-37,-40,]),'MINUS':([30,37,38,39,42,43,46,47,48,49,51,53,54,55,56,58,62,66,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,95,97,98,101,102,103,104,105,107,109,110,112,113,115,116,119,123,124,127,129,130,134,135,136,137,138,139,140,142,144,145,147,148,149,150,],[44,44,44,-46,-48,-28,83,-55,-65,-57,-26,-53,-8,44,-43,-49,-29,-35,-27,-9,44,-42,-54,44,-68,-67,44,-69,-71,-66,-70,-62,-63,44,44,-59,-58,44,-60,-43,44,44,44,-39,-56,44,-34,44,83,-64,-44,-61,-30,44,-52,-32,-33,44,-45,44,-47,-50,44,44,-31,-38,-41,44,-36,-51,44,44,-37,-40,]),'DOT':([39,42,47,53,56,58,72,73,95,103,112,119,129,134,135,140,145,],[-46,-48,86,-53,-43,-49,-42,86,-43,86,-44,-52,-45,-47,-50,-41,-51,]),'RBRACE':([1,11,22,27,28,30,31,33,35,38,43,51,54,62,64,65,66,68,69,102,105,115,123,124,138,139,144,149,150,],[-6,-7,-10,-5,-11,51,-25,-12,64,68,-28,-26,-8,-29,-24,-21,-35,-27,-9,-39,-34,-30,-32,-33,-31,-38,-36,-37,-40,]),'LE':([39,42,45,46,47,48,49,53,56,58,72,73,95,103,109,110,112,113,119,129,134,135,140,145,],[-46,-48,76,-73,-55,-65,-57,-53,-43,-49,-42,-54,-43,-56,-72,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'RPAREN':([16,19,20,26,32,39,42,45,46,47,48,49,53,56,58,61,72,73,95,96,97,103,106,108,109,110,112,113,119,120,121,122,126,129,130,134,135,140,141,143,145,146,],[-15,24,-16,-20,-17,-46,-48,-75,-73,-55,-65,-57,-53,-43,-49,-77,-42,-54,118,119,-2,-56,127,-74,-72,-64,-44,-61,-52,135,-3,137,-76,-45,-2,-47,-50,-41,145,-4,-51,148,]),'SEMI':([30,36,37,38,39,42,43,45,46,47,48,49,51,53,54,56,58,59,61,62,63,66,67,68,69,72,73,91,92,93,99,100,102,103,105,108,109,110,112,113,115,119,123,124,125,126,127,129,131,132,134,135,137,138,139,140,144,145,147,148,149,150,],[43,65,66,43,-46,-48,-28,-75,-73,-55,-65,-57,-26,-53,-8,-43,-49,102,-77,-29,65,-35,105,-27,-9,-42,-54,-13,115,-18,123,124,-39,-56,-34,-74,-72,-64,-44,-61,-30,-52,-32,-33,138,-76,43,-45,-14,-19,-47,-50,43,-31,-38,-41,-36,-51,43,43,-37,-40,]),'NE':([39,42,45,46,47,48,49,53,56,58,72,73,95,103,109,110,112,113,119,129,134,135,140,145,],[-46,-48,79,-73,-55,-65,-57,-53,-43,-49,-42,-54,-43,-56,-72,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'COL':([133,],[142,]),'LT':([39,42,45,46,47,48,49,53,56,58,72,73,95,103,109,110,112,113,119,129,134,135,140,145,],[-46,-48,80,-73,-55,-65,-57,-53,-43,-49,-42,-54,-43,-56,-72,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'RARRAY':([12,39,42,45,46,47,48,49,53,56,58,61,72,73,103,108,109,110,111,112,113,119,126,128,129,134,135,140,145,],[15,-46,-48,-75,-73,-55,-65,-57,-53,-43,-49,-77,-42,-54,-56,-74,-72,-64,129,-44,-61,-52,-76,140,-45,-47,-50,-41,-51,]),'COMMA':([16,19,20,26,32,39,42,45,46,47,48,49,53,56,58,61,72,73,91,92,93,97,103,108,109,110,112,113,119,120,121,126,129,130,131,132,134,135,140,141,143,145,],[-15,25,-16,-20,-17,-46,-48,-75,-73,-55,-65,-57,-53,-43,-49,-77,-42,-54,-13,114,-18,-2,-56,-74,-72,-64,-44,-61,-52,136,-3,-76,-45,-2,-14,-19,-47,-50,-41,136,-4,-51,]),'PLUS':([39,42,46,47,48,49,53,56,58,72,73,95,103,109,110,112,113,119,129,134,135,140,145,],[-46,-48,82,-55,-65,-57,-53,-43,-49,-42,-54,-43,-56,82,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'CLASS':([0,1,3,11,22,27,28,31,33,35,51,64,65,68,],[9,-6,9,-7,-10,9,-11,-25,-12,9,-26,-24,-21,-27,]),'$end':([0,1,3,6,11,31,51,64,68,],[-5,-6,-1,0,-7,-25,-26,-24,-27,]),'GT':([39,42,45,46,47,48,49,53,56,58,72,73,95,103,109,110,112,113,119,129,134,135,140,145,],[-46,-48,75,-73,-55,-65,-57,-53,-43,-49,-42,-54,-43,-56,-72,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'STRING':([0,1,3,11,16,22,25,27,28,30,31,33,35,38,41,43,51,54,62,64,65,66,68,69,94,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[10,-6,10,-7,10,10,10,10,-11,10,-25,-12,10,10,10,-28,-26,-8,-29,-24,-21,-35,-27,-9,10,-39,-34,-30,-32,-33,10,10,-31,-38,-36,10,10,-37,-40,]),'FOR':([30,38,43,51,54,62,66,68,69,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[52,52,-28,-26,-8,-29,-35,-27,-9,-39,-34,-30,-32,-33,52,52,-31,-38,-36,52,52,-37,-40,]),'SENTENCE':([30,37,38,43,44,51,54,55,60,62,66,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,97,98,101,102,104,105,107,115,116,123,124,127,130,136,137,138,139,142,144,147,148,149,150,],[53,53,53,-28,53,-26,-8,53,53,-29,-35,-27,-9,53,53,-68,-67,53,-69,-71,-66,-70,-62,-63,53,53,-59,-58,53,-60,53,53,53,-39,53,-34,53,-30,53,-32,-33,53,53,53,53,-31,-38,53,-36,53,53,-37,-40,]),'PLUSPLUS':([39,42,45,46,47,48,49,53,56,58,59,61,72,73,103,108,109,110,112,113,119,126,129,134,135,140,145,],[-46,-48,-75,-73,-55,-65,-57,-53,-43,-49,99,-77,-42,-54,-56,-74,-72,-64,-44,-61,-52,-76,-45,-47,-50,-41,-51,]),'EQUALS':([39,42,45,46,47,48,49,53,56,58,59,61,72,73,93,103,108,109,110,112,113,119,126,129,134,135,140,145,],[-46,-48,-75,-73,-55,-65,-57,-53,-43,-49,101,-77,-42,-54,116,-56,-74,-72,-64,-44,-61,-52,-76,-45,-47,-50,-41,-51,]),'TIMES':([39,42,47,48,49,53,56,58,72,73,95,103,110,112,113,119,129,134,135,140,145,],[-46,-48,-55,88,-57,-53,-43,-49,-42,-54,-43,-56,88,-44,-61,-52,-45,-47,-50,-41,-51,]),'GE':([39,42,45,46,47,48,49,53,56,58,72,73,95,103,109,110,112,113,119,129,134,135,140,145,],[-46,-48,78,-73,-55,-65,-57,-53,-43,-49,-42,-54,-43,-56,-72,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'EXTENDS':([14,],[18,]),'LARRAY':([2,4,5,7,10,39,42,47,53,56,58,71,72,73,95,103,112,119,129,134,135,140,145,],[-80,12,-78,-81,-79,-46,-48,85,-53,-43,-49,107,-42,85,-43,85,-44,-52,-45,-47,-50,-41,-51,]),'LPAREN':([13,30,37,38,40,43,44,51,52,54,55,56,57,60,62,63,66,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,95,97,98,101,102,104,105,107,112,115,116,123,124,127,130,136,137,138,139,142,144,147,148,149,150,],[16,55,55,55,70,-28,55,-26,94,-8,55,97,98,55,-29,16,-35,-27,-9,55,55,-68,-67,55,-69,-71,-66,-70,-62,-63,55,55,-59,-58,55,-60,97,55,55,55,-39,55,-34,55,130,-30,55,-32,-33,55,55,55,55,-31,-38,55,-36,55,55,-37,-40,]),'MINUSMINUS':([39,42,45,46,47,48,49,53,56,58,59,61,72,73,103,108,109,110,112,113,119,126,129,134,135,140,145,],[-46,-48,-75,-73,-55,-65,-57,-53,-43,-49,100,-77,-42,-54,-56,-74,-72,-64,-44,-61,-52,-76,-45,-47,-50,-41,-51,]),'ELSE':([43,51,62,66,68,102,105,115,123,124,138,139,144,149,150,],[-28,-26,-29,-35,-27,-39,-34,-30,-32,-33,-31,-38,147,-37,-40,]),'EQ':([39,42,45,46,47,48,49,53,56,58,72,73,95,103,109,110,112,113,119,129,134,135,140,145,],[-46,-48,81,-73,-55,-65,-57,-53,-43,-49,-42,-54,-43,-56,-72,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'ID':([2,4,5,7,8,9,10,15,18,21,29,30,34,37,38,41,43,44,50,51,54,55,60,62,66,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,101,102,104,105,107,114,115,116,117,123,124,127,130,136,137,138,139,142,144,147,148,149,150,],[-80,-82,-78,-81,13,14,-79,-83,23,26,36,56,63,56,56,72,-28,56,93,-26,-8,95,56,-29,-35,-27,-9,56,56,-68,-67,56,-69,-71,-66,-70,-62,-63,56,56,112,-59,-58,56,-60,56,56,56,-39,56,-34,56,93,-30,56,133,-32,-33,56,56,56,56,-31,-38,56,-36,56,56,-37,-40,]),'IF':([30,38,43,51,54,62,66,68,69,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[57,57,-28,-26,-8,-29,-35,-27,-9,-39,-34,-30,-32,-33,57,57,-31,-38,-36,57,57,-37,-40,]),'AND':([39,42,45,46,47,48,49,53,56,58,72,73,95,103,109,110,112,113,119,129,134,135,140,145,],[-46,-48,74,-73,-55,-65,-57,-53,-43,-49,-42,-54,-43,-56,-72,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'LBRACE':([14,17,23,24,30,38,43,51,54,62,66,68,69,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[-22,22,-23,30,30,30,-28,-26,-8,-29,-35,-27,-9,-39,-34,-30,-32,-33,30,30,-31,-38,-36,30,30,-37,-40,]),'FALSE':([30,37,38,43,44,51,54,55,60,62,66,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,97,98,101,102,104,105,107,115,116,123,124,127,130,136,137,138,139,142,144,147,148,149,150,],[58,58,58,-28,58,-26,-8,58,58,-29,-35,-27,-9,58,58,-68,-67,58,-69,-71,-66,-70,-62,-63,58,58,-59,-58,58,-60,58,58,58,-39,58,-34,58,-30,58,-32,-33,58,58,58,58,-31,-38,58,-36,58,58,-37,-40,]),'INT':([0,1,3,11,16,22,25,27,28,30,31,33,35,38,41,43,51,54,62,64,65,66,68,69,94,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[5,-6,5,-7,5,5,5,5,-11,5,-25,-12,5,5,5,-28,-26,-8,-29,-24,-21,-35,-27,-9,5,-39,-34,-30,-32,-33,5,5,-31,-38,-36,5,5,-37,-40,]),'BOOLEAN':([0,1,3,11,16,22,25,27,28,30,31,33,35,38,41,43,51,54,62,64,65,66,68,69,94,102,105,115,123,124,127,137,138,139,144,147,148,149,150,],[7,-6,7,-7,7,7,7,7,-11,7,-25,-12,7,7,7,-28,-26,-8,-29,-24,-21,-35,-27,-9,7,-39,-34,-30,-32,-33,7,7,-31,-38,-36,7,7,-37,-40,]),'NOT':([30,37,38,43,51,54,55,62,66,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,97,98,101,102,104,105,107,115,116,123,124,127,130,136,137,138,139,142,144,147,148,149,150,],[60,60,60,-28,-26,-8,60,-29,-35,-27,-9,60,60,-68,-67,60,-69,-71,-66,-70,-62,-63,60,60,-59,-58,60,-60,60,60,60,-39,60,-34,60,-30,60,-32,-33,60,60,60,60,-31,-38,60,-36,60,60,-37,-40,]),'OR':([39,42,45,46,47,48,49,53,56,58,61,72,73,95,103,108,109,110,112,113,119,129,134,135,140,145,],[-46,-48,-75,-73,-55,-65,-57,-53,-43,-49,104,-42,-54,-43,-56,-74,-72,-64,-44,-61,-52,-45,-47,-50,-41,-51,]),'MOD':([39,42,47,48,49,53,56,58,72,73,95,103,110,112,113,119,129,134,135,140,145,],[-46,-48,-55,90,-57,-53,-43,-49,-42,-54,-43,-56,90,-44,-61,-52,-45,-47,-50,-41,-51,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'liststmt':([30,],[38,]),'listarg':([16,],[19,]),'listexpr':([97,130,],[120,141,]),'arg':([16,25,],[20,32,]),'field':([22,27,],[28,33,]),'expr2':([30,37,38,55,70,74,85,97,98,101,104,107,116,127,130,136,137,142,147,148,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'expr3':([30,37,38,55,70,74,77,85,97,98,101,104,107,116,127,130,136,137,142,147,148,],[46,46,46,46,46,46,109,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'program':([0,],[6,]),'expr6':([30,37,38,44,55,60,70,74,77,84,85,89,97,98,101,104,107,116,127,130,136,137,142,147,148,],[47,47,47,73,47,103,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'listitem':([50,],[92,]),'expr4':([30,37,38,55,70,74,77,84,85,97,98,101,104,107,116,127,130,136,137,142,147,148,],[48,48,48,48,48,48,48,110,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'expr5':([30,37,38,55,70,74,77,84,85,89,97,98,101,104,107,116,127,130,136,137,142,147,148,],[49,49,49,49,49,49,49,49,49,113,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'type':([0,3,16,22,25,27,30,35,38,127,137,147,148,],[8,8,21,29,21,34,50,8,50,50,50,50,50,]),'addop':([46,109,],[84,84,]),'topdef':([0,3,27,35,],[1,11,1,11,]),'listtopdef':([0,27,],[3,35,]),'stmt':([30,38,127,137,147,148,],[54,69,139,144,149,150,]),'type_s':([0,3,16,22,25,27,30,35,38,41,94,127,137,147,148,],[4,4,4,4,4,4,4,4,4,71,117,4,4,4,4,]),'relop':([45,],[77,]),'expr':([30,37,38,55,70,85,97,98,101,104,107,116,127,130,136,137,142,147,148,],[59,67,59,96,106,111,121,122,125,126,128,132,59,121,143,59,146,59,59,]),'listfields':([22,],[27,]),'item':([50,114,],[91,131,]),'ext':([14,],[17,]),'mulop':([48,110,],[89,89,]),'expr1':([30,37,38,55,70,74,85,97,98,101,104,107,116,127,130,136,137,142,147,148,],[61,61,61,61,61,108,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'block':([24,30,38,127,137,147,148,],[31,62,62,62,62,62,62,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> listtopdef','program',1,'p_program','src/lattepar.py',29),
  ('listexpr -> <empty>','listexpr',0,'p_list_expr','src/lattepar.py',36),
  ('listexpr -> expr','listexpr',1,'p_list_expr','src/lattepar.py',37),
  ('listexpr -> listexpr COMMA expr','listexpr',3,'p_list_expr','src/lattepar.py',38),
  ('listtopdef -> <empty>','listtopdef',0,'p_list_topdef','src/lattepar.py',53),
  ('listtopdef -> topdef','listtopdef',1,'p_list_topdef','src/lattepar.py',54),
  ('listtopdef -> listtopdef topdef','listtopdef',2,'p_list_topdef','src/lattepar.py',55),
  ('liststmt -> stmt','liststmt',1,'p_list_stmt','src/lattepar.py',71),
  ('liststmt -> liststmt stmt','liststmt',2,'p_list_stmt','src/lattepar.py',72),
  ('listfields -> <empty>','listfields',0,'p_list_fields','src/lattepar.py',83),
  ('listfields -> field','listfields',1,'p_list_fields','src/lattepar.py',84),
  ('listfields -> listfields field','listfields',2,'p_list_fields','src/lattepar.py',85),
  ('listitem -> item','listitem',1,'p_list_item','src/lattepar.py',100),
  ('listitem -> listitem COMMA item','listitem',3,'p_list_item','src/lattepar.py',101),
  ('listarg -> <empty>','listarg',0,'p_list_arg','src/lattepar.py',116),
  ('listarg -> arg','listarg',1,'p_list_arg','src/lattepar.py',117),
  ('listarg -> listarg COMMA arg','listarg',3,'p_list_arg','src/lattepar.py',118),
  ('item -> ID','item',1,'p_item_noinit','src/lattepar.py',135),
  ('item -> ID EQUALS expr','item',3,'p_item_init','src/lattepar.py',140),
  ('arg -> type ID','arg',2,'p_arg','src/lattepar.py',148),
  ('field -> type ID SEMI','field',3,'p_field_s','src/lattepar.py',153),
  ('ext -> <empty>','ext',0,'p_class_extends','src/lattepar.py',161),
  ('ext -> EXTENDS ID','ext',2,'p_class_extends','src/lattepar.py',162),
  ('topdef -> CLASS ID ext LBRACE listfields listtopdef RBRACE','topdef',7,'p_classdef','src/lattepar.py',171),
  ('topdef -> type ID LPAREN listarg RPAREN block','topdef',6,'p_fndef','src/lattepar.py',176),
  ('block -> LBRACE RBRACE','block',2,'p_block','src/lattepar.py',181),
  ('block -> LBRACE liststmt RBRACE','block',3,'p_block','src/lattepar.py',182),
  ('stmt -> SEMI','stmt',1,'p_statement_empty','src/lattepar.py',192),
  ('stmt -> block','stmt',1,'p_statement_block','src/lattepar.py',197),
  ('stmt -> type listitem SEMI','stmt',3,'p_statement_decl','src/lattepar.py',202),
  ('stmt -> expr EQUALS expr SEMI','stmt',4,'p_statement_var_ass','src/lattepar.py',207),
  ('stmt -> expr PLUSPLUS SEMI','stmt',3,'p_statement_incr','src/lattepar.py',212),
  ('stmt -> expr MINUSMINUS SEMI','stmt',3,'p_statement_decr','src/lattepar.py',217),
  ('stmt -> RETURN expr SEMI','stmt',3,'p_statement_ret','src/lattepar.py',222),
  ('stmt -> RETURN SEMI','stmt',2,'p_statement_vret','src/lattepar.py',227),
  ('stmt -> IF LPAREN expr RPAREN stmt','stmt',5,'p_statement_cond','src/lattepar.py',232),
  ('stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','stmt',7,'p_statement_condelse','src/lattepar.py',237),
  ('stmt -> WHILE LPAREN expr RPAREN stmt','stmt',5,'p_statement_while','src/lattepar.py',242),
  ('stmt -> expr SEMI','stmt',2,'p_statement_sexp','src/lattepar.py',247),
  ('stmt -> FOR LPAREN type_s ID COL expr RPAREN stmt','stmt',8,'p_statement_for','src/lattepar.py',251),
  ('expr6 -> NEW type_s LARRAY expr RARRAY','expr6',5,'p_expression_array_init','src/lattepar.py',258),
  ('expr6 -> NEW ID','expr6',2,'p_expression_object_init','src/lattepar.py',263),
  ('expr6 -> ID','expr6',1,'p_expression_var','src/lattepar.py',268),
  ('expr6 -> expr6 DOT ID','expr6',3,'p_expression_field','src/lattepar.py',273),
  ('expr6 -> expr6 LARRAY expr RARRAY','expr6',4,'p_expression_array','src/lattepar.py',278),
  ('expr6 -> NUMBER','expr6',1,'p_expression_int','src/lattepar.py',283),
  ('expr6 -> LPAREN ID RPAREN NULL','expr6',4,'p_expression_null','src/lattepar.py',288),
  ('expr6 -> TRUE','expr6',1,'p_expression_boolean','src/lattepar.py',293),
  ('expr6 -> FALSE','expr6',1,'p_expression_boolean','src/lattepar.py',294),
  ('expr6 -> ID LPAREN listexpr RPAREN','expr6',4,'p_expression_app','src/lattepar.py',299),
  ('expr6 -> expr6 DOT ID LPAREN listexpr RPAREN','expr6',6,'p_expression_method_app','src/lattepar.py',304),
  ('expr6 -> LPAREN expr RPAREN','expr6',3,'p_expression_group','src/lattepar.py',309),
  ('expr6 -> SENTENCE','expr6',1,'p_expression_string','src/lattepar.py',314),
  ('expr5 -> MINUS expr6','expr5',2,'p_expression_neg','src/lattepar.py',319),
  ('expr5 -> expr6','expr5',1,'p_expression_not_1','src/lattepar.py',324),
  ('expr5 -> NOT expr6','expr5',2,'p_expression_not_2','src/lattepar.py',329),
  ('expr4 -> expr5','expr4',1,'p_expression_mul_1','src/lattepar.py',334),
  ('mulop -> TIMES','mulop',1,'p_mulop','src/lattepar.py',339),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','src/lattepar.py',340),
  ('mulop -> MOD','mulop',1,'p_mulop','src/lattepar.py',341),
  ('expr4 -> expr4 mulop expr5','expr4',3,'p_expression_mul_2','src/lattepar.py',346),
  ('addop -> PLUS','addop',1,'p_addop','src/lattepar.py',351),
  ('addop -> MINUS','addop',1,'p_addop','src/lattepar.py',352),
  ('expr3 -> expr3 addop expr4','expr3',3,'p_expression_add_1','src/lattepar.py',357),
  ('expr3 -> expr4','expr3',1,'p_expression_add_3','src/lattepar.py',362),
  ('relop -> LT','relop',1,'p_relop','src/lattepar.py',367),
  ('relop -> LE','relop',1,'p_relop','src/lattepar.py',368),
  ('relop -> GT','relop',1,'p_relop','src/lattepar.py',369),
  ('relop -> GE','relop',1,'p_relop','src/lattepar.py',370),
  ('relop -> EQ','relop',1,'p_relop','src/lattepar.py',371),
  ('relop -> NE','relop',1,'p_relop','src/lattepar.py',372),
  ('expr2 -> expr2 relop expr3','expr2',3,'p_expression_rel_1','src/lattepar.py',377),
  ('expr2 -> expr3','expr2',1,'p_expression_rel_2','src/lattepar.py',382),
  ('expr1 -> expr2 AND expr1','expr1',3,'p_expression_and_1','src/lattepar.py',387),
  ('expr1 -> expr2','expr1',1,'p_expression_and_2','src/lattepar.py',392),
  ('expr -> expr1 OR expr','expr',3,'p_expression_or_1','src/lattepar.py',397),
  ('expr -> expr1','expr',1,'p_expression_or_2','src/lattepar.py',402),
  ('type_s -> INT','type_s',1,'p_type_s','src/lattepar.py',408),
  ('type_s -> STRING','type_s',1,'p_type_s','src/lattepar.py',409),
  ('type_s -> VOID','type_s',1,'p_type_s','src/lattepar.py',410),
  ('type_s -> BOOLEAN','type_s',1,'p_type_s','src/lattepar.py',411),
  ('type -> type_s','type',1,'p_type_1','src/lattepar.py',415),
  ('type -> type_s LARRAY RARRAY','type',3,'p_type_a','src/lattepar.py',419),
]
