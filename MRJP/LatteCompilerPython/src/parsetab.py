
# src/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'Un-\xad*P\xffT\xc0\xcc\xbd\xd6X0\x1e\x06'
    
_lr_action_items = {'DIVIDE':([41,44,49,50,51,55,58,60,70,71,77,78,102,109,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,-62,94,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,94,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'RETURN':([31,40,45,53,56,64,69,73,74,108,114,121,123,127,137,142,145,157,159,166,168,173,174,175,176,177,178,],[39,39,-30,-28,-8,-31,-39,-29,-9,-43,-38,-36,-37,-32,-33,39,-35,39,-42,-34,-40,39,39,39,-41,-45,-44,]),'VOID':([0,1,3,11,16,22,25,27,28,31,32,34,35,40,43,45,53,56,64,65,67,68,69,73,74,101,108,114,121,123,127,137,140,142,145,157,158,159,166,168,173,174,175,176,177,178,],[2,-6,2,-7,2,2,2,2,-10,2,-27,-26,-11,2,2,-30,-28,-8,-31,-21,-20,2,-39,-29,-9,2,-43,-38,-36,-37,-32,-33,-22,2,-35,2,-23,-42,-34,-40,2,2,2,-41,-45,-44,]),'NUMBER':([31,39,40,45,46,53,56,57,62,64,69,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,97,104,105,107,108,110,113,114,116,117,121,123,127,128,137,142,145,146,147,156,157,159,164,165,166,168,173,174,175,176,177,178,],[41,41,41,-30,41,-28,-8,41,41,-31,-39,-29,-9,41,41,-75,-74,41,-76,-78,-73,-77,-69,-70,41,41,-66,-65,41,-67,41,41,41,-43,41,41,-38,41,41,-36,-37,-32,41,-33,41,-35,41,41,41,41,-42,41,41,-34,-40,41,41,41,-41,-45,-44,]),'WHILE':([31,40,45,53,56,64,69,73,74,108,114,121,123,127,137,142,145,157,159,166,168,173,174,175,176,177,178,],[42,42,-30,-28,-8,-31,-39,-29,-9,-43,-38,-36,-37,-32,-33,42,-35,42,-42,-34,-40,42,42,42,-41,-45,-44,]),'NEW':([31,39,40,45,46,53,56,57,62,64,69,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,97,104,105,107,108,110,113,114,116,117,121,123,127,128,137,142,145,146,147,156,157,159,164,165,166,168,173,174,175,176,177,178,],[43,43,43,-30,43,-28,-8,43,43,-31,-39,-29,-9,43,43,-75,-74,43,-76,-78,-73,-77,-69,-70,43,43,-66,-65,43,-67,43,43,43,-43,43,43,-38,43,43,-36,-37,-32,43,-33,43,-35,43,43,43,43,-42,43,43,-34,-40,43,43,43,-41,-45,-44,]),'NULL':([131,],[152,]),'TRUE':([31,39,40,45,46,53,56,57,62,64,69,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,97,104,105,107,108,110,113,114,116,117,121,123,127,128,137,142,145,146,147,156,157,159,164,165,166,168,173,174,175,176,177,178,],[44,44,44,-30,44,-28,-8,44,44,-31,-39,-29,-9,44,44,-75,-74,44,-76,-78,-73,-77,-69,-70,44,44,-66,-65,44,-67,44,44,44,-43,44,44,-38,44,44,-36,-37,-32,44,-33,44,-35,44,44,44,44,-42,44,44,-34,-40,44,44,44,-41,-45,-44,]),'MINUS':([31,39,40,41,44,45,48,49,50,51,53,55,56,57,58,60,64,69,70,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,97,102,104,105,107,108,109,110,113,114,116,117,119,120,121,123,124,125,127,128,132,137,142,145,146,147,152,154,155,156,157,159,160,161,164,165,166,168,169,170,173,174,175,176,177,178,],[46,46,46,-53,-55,-30,88,-62,-72,-64,-28,-60,-8,46,-49,-56,-31,-39,-62,-49,-29,-9,46,-48,-61,46,-75,-74,46,-76,-78,-73,-77,-69,-70,46,46,-66,-65,46,-67,-49,46,46,46,-43,-63,46,46,-38,46,46,88,-71,-36,-37,-50,-68,-32,46,-59,-33,46,-35,46,46,-54,-52,-57,46,46,-42,-46,-47,46,46,-34,-40,-51,-58,46,46,46,-41,-45,-44,]),'DOT':([41,44,49,55,58,60,70,71,77,78,102,109,124,132,152,154,155,160,161,169,170,],[-53,-55,93,-60,-49,-56,93,-49,-48,93,-49,93,-50,-59,-54,-52,-57,-46,-47,-51,-58,]),'RBRACE':([27,28,31,35,40,45,53,56,64,65,67,69,73,74,108,114,121,123,127,137,140,145,158,159,166,168,176,177,178,],[34,-10,53,-11,73,-30,-28,-8,-31,-21,-20,-39,-29,-9,-43,-38,-36,-37,-32,-33,-22,-35,-23,-42,-34,-40,-41,-45,-44,]),'LE':([41,44,47,48,49,50,51,55,58,60,70,71,77,78,102,109,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,81,-80,-62,-72,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,-79,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'RPAREN':([16,19,20,26,33,41,44,47,48,50,51,55,60,63,68,70,71,77,78,102,103,105,109,112,115,118,119,120,124,125,132,135,136,138,139,147,152,154,155,160,161,163,167,169,170,171,172,],[-14,24,-15,-19,-16,-53,-55,-82,-80,-72,-64,-60,-56,-84,-14,-62,-49,-48,-61,131,132,-2,-63,141,142,-81,-79,-71,-50,-68,-59,155,-3,157,-83,-2,-54,-52,-57,-46,-47,170,-4,-51,-58,174,175,]),'SEMI':([31,36,38,39,40,41,44,45,47,48,49,50,51,53,55,56,58,60,61,63,64,69,70,71,72,73,74,77,78,90,92,98,99,100,106,108,109,111,114,118,119,120,121,122,123,124,125,127,132,137,139,142,145,148,149,152,153,154,155,157,159,160,161,166,168,169,170,173,174,175,176,177,178,],[45,65,67,69,45,-53,-55,-30,-82,-80,-62,-72,-64,-28,-60,-8,-49,-56,108,-84,-31,-39,-62,-49,114,-29,-9,-48,-61,121,123,-12,127,-17,137,-43,-63,140,-38,-81,-79,-71,-36,145,-37,-50,-68,-32,-59,-33,-83,45,-35,-13,-18,-54,166,-52,-57,45,-42,-46,-47,-34,-40,-51,-58,45,45,45,-41,-45,-44,]),'NE':([41,44,47,48,49,50,51,55,58,60,70,71,77,78,102,109,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,84,-80,-62,-72,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,-79,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'COL':([150,151,],[164,165,]),'LT':([41,44,47,48,49,50,51,55,58,60,70,71,77,78,102,109,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,85,-80,-62,-72,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,-79,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'RARRAY':([12,37,41,44,47,48,50,51,55,60,63,70,71,77,78,104,109,118,119,120,124,125,132,134,139,143,144,152,154,155,160,161,162,169,170,],[15,66,-53,-55,-82,-80,-72,-64,-60,-56,-84,-62,-49,-48,-61,133,-63,-81,-79,-71,-50,-68,-59,154,-83,160,161,-54,-52,-57,-46,-47,169,-51,-58,]),'COMMA':([16,19,20,26,33,41,44,47,48,50,51,55,60,63,68,70,71,77,78,98,99,100,105,106,109,112,118,119,120,124,125,132,135,136,139,147,148,149,152,153,154,155,160,161,163,167,169,170,],[-14,25,-15,-19,-16,-53,-55,-82,-80,-72,-64,-60,-56,-84,-14,-62,-49,-48,-61,-12,126,-17,-2,126,-63,25,-81,-79,-71,-50,-68,-59,156,-3,-83,-2,-13,-18,-54,126,-52,-57,-46,-47,156,-4,-51,-58,]),'PLUS':([41,44,48,49,50,51,55,58,60,70,71,77,78,102,109,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,87,-62,-72,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,87,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'CLASS':([0,1,3,11,32,34,53,73,],[9,-6,9,-7,-27,-26,-28,-29,]),'$end':([0,1,3,6,11,32,34,53,73,],[-5,-6,-1,0,-7,-27,-26,-28,-29,]),'GT':([41,44,47,48,49,50,51,55,58,60,70,71,77,78,102,109,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,80,-80,-62,-72,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,-79,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'STRING':([0,1,3,11,16,22,25,27,28,31,32,34,35,40,43,45,53,56,64,65,67,68,69,73,74,101,108,114,121,123,127,137,140,142,145,157,158,159,166,168,173,174,175,176,177,178,],[10,-6,10,-7,10,10,10,10,-10,10,-27,-26,-11,10,10,-30,-28,-8,-31,-21,-20,10,-39,-29,-9,10,-43,-38,-36,-37,-32,-33,-22,10,-35,10,-23,-42,-34,-40,10,10,10,-41,-45,-44,]),'FOR':([31,40,45,53,56,64,69,73,74,108,114,121,123,127,137,142,145,157,159,166,168,173,174,175,176,177,178,],[54,54,-30,-28,-8,-31,-39,-29,-9,-43,-38,-36,-37,-32,-33,54,-35,54,-42,-34,-40,54,54,54,-41,-45,-44,]),'SENTENCE':([31,39,40,45,46,53,56,57,62,64,69,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,97,104,105,107,108,110,113,114,116,117,121,123,127,128,137,142,145,146,147,156,157,159,164,165,166,168,173,174,175,176,177,178,],[55,55,55,-30,55,-28,-8,55,55,-31,-39,-29,-9,55,55,-75,-74,55,-76,-78,-73,-77,-69,-70,55,55,-66,-65,55,-67,55,55,55,-43,55,55,-38,55,55,-36,-37,-32,55,-33,55,-35,55,55,55,55,-42,55,55,-34,-40,55,55,55,-41,-45,-44,]),'PLUSPLUS':([41,44,49,55,58,60,77,124,132,152,154,155,160,161,169,170,],[-53,-55,90,-60,-49,-56,-48,-50,-59,-54,-52,-57,-46,-47,-51,-58,]),'EQUALS':([41,44,49,55,58,60,77,100,124,132,152,154,155,160,161,169,170,],[-53,-55,91,-60,-49,-56,-48,128,-50,-59,-54,-52,-57,-46,-47,-51,-58,]),'TIMES':([41,44,49,50,51,55,58,60,70,71,77,78,102,109,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,-62,95,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,95,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'GE':([41,44,47,48,49,50,51,55,58,60,70,71,77,78,102,109,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,83,-80,-62,-72,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,-79,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'EXTENDS':([14,],[18,]),'LARRAY':([2,4,5,7,10,29,58,71,76,77,102,124,],[-87,12,-85,-88,-86,37,104,113,116,117,113,146,]),'LPAREN':([13,31,38,39,40,42,45,46,53,54,56,57,58,59,62,64,69,71,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,97,102,104,105,107,108,110,113,114,116,117,121,123,124,127,128,137,142,145,146,147,156,157,159,164,165,166,168,173,174,175,176,177,178,],[16,57,68,57,57,75,-30,57,-28,101,-8,57,105,107,57,-31,-39,105,-29,-9,57,57,-75,-74,57,-76,-78,-73,-77,-69,-70,57,57,-66,-65,57,-67,105,57,57,57,-43,57,57,-38,57,57,-36,-37,147,-32,57,-33,57,-35,57,57,57,57,-42,57,57,-34,-40,57,57,57,-41,-45,-44,]),'MINUSMINUS':([41,44,49,55,58,60,77,124,132,152,154,155,160,161,169,170,],[-53,-55,92,-60,-49,-56,-48,-50,-59,-54,-52,-57,-46,-47,-51,-58,]),'ELSE':([45,53,64,69,73,108,114,121,123,127,137,145,159,166,168,176,177,178,],[-30,-28,-31,-39,-29,-43,-38,-36,-37,-32,-33,-35,-42,-34,173,-41,-45,-44,]),'EQ':([41,44,47,48,49,50,51,55,58,60,70,71,77,78,102,109,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,86,-80,-62,-72,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,-79,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'ID':([2,4,5,7,8,9,10,15,18,21,22,27,28,29,30,31,35,39,40,43,45,46,52,53,56,57,58,62,64,65,66,67,69,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,101,104,105,107,108,110,113,114,116,117,121,123,126,127,128,129,130,133,137,140,142,145,146,147,156,157,158,159,164,165,166,168,173,174,175,176,177,178,],[-87,-89,-85,-88,13,14,-86,-90,23,26,29,29,-10,36,38,58,-11,71,58,77,-30,71,100,-28,-8,102,100,71,-31,-21,111,-20,-39,-29,-9,71,71,-75,-74,71,-76,-78,-73,-77,-69,-70,71,71,124,-66,-65,71,-67,129,71,71,71,-43,71,71,-38,71,71,-36,-37,100,-32,71,150,151,100,-33,-22,58,-35,71,71,71,58,-23,-42,71,71,-34,-40,58,58,58,-41,-45,-44,]),'IF':([31,40,45,53,56,64,69,73,74,108,114,121,123,127,137,142,145,157,159,166,168,173,174,175,176,177,178,],[59,59,-30,-28,-8,-31,-39,-29,-9,-43,-38,-36,-37,-32,-33,59,-35,59,-42,-34,-40,59,59,59,-41,-45,-44,]),'AND':([41,44,47,48,49,50,51,55,58,60,70,71,77,78,102,109,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,79,-80,-62,-72,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,-79,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'LBRACE':([14,17,23,24,31,40,45,53,56,64,69,73,74,108,114,121,123,127,137,141,142,145,157,159,166,168,173,174,175,176,177,178,],[-24,22,-25,31,31,31,-30,-28,-8,-31,-39,-29,-9,-43,-38,-36,-37,-32,-33,31,31,-35,31,-42,-34,-40,31,31,31,-41,-45,-44,]),'FALSE':([31,39,40,45,46,53,56,57,62,64,69,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,97,104,105,107,108,110,113,114,116,117,121,123,127,128,137,142,145,146,147,156,157,159,164,165,166,168,173,174,175,176,177,178,],[60,60,60,-30,60,-28,-8,60,60,-31,-39,-29,-9,60,60,-75,-74,60,-76,-78,-73,-77,-69,-70,60,60,-66,-65,60,-67,60,60,60,-43,60,60,-38,60,60,-36,-37,-32,60,-33,60,-35,60,60,60,60,-42,60,60,-34,-40,60,60,60,-41,-45,-44,]),'INT':([0,1,3,11,16,22,25,27,28,31,32,34,35,40,43,45,53,56,64,65,67,68,69,73,74,101,108,114,121,123,127,137,140,142,145,157,158,159,166,168,173,174,175,176,177,178,],[5,-6,5,-7,5,5,5,5,-10,5,-27,-26,-11,5,5,-30,-28,-8,-31,-21,-20,5,-39,-29,-9,5,-43,-38,-36,-37,-32,-33,-22,5,-35,5,-23,-42,-34,-40,5,5,5,-41,-45,-44,]),'BOOLEAN':([0,1,3,11,16,22,25,27,28,31,32,34,35,40,43,45,53,56,64,65,67,68,69,73,74,101,108,114,121,123,127,137,140,142,145,157,158,159,166,168,173,174,175,176,177,178,],[7,-6,7,-7,7,7,7,7,-10,7,-27,-26,-11,7,7,-30,-28,-8,-31,-21,-20,7,-39,-29,-9,7,-43,-38,-36,-37,-32,-33,-22,7,-35,7,-23,-42,-34,-40,7,7,7,-41,-45,-44,]),'NOT':([31,39,40,45,53,56,57,64,69,73,74,75,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,97,104,105,107,108,110,113,114,116,117,121,123,127,128,137,142,145,146,147,156,157,159,164,165,166,168,173,174,175,176,177,178,],[62,62,62,-30,-28,-8,62,-31,-39,-29,-9,62,62,-75,-74,62,-76,-78,-73,-77,-69,-70,62,62,-66,-65,62,-67,62,62,62,-43,62,62,-38,62,62,-36,-37,-32,62,-33,62,-35,62,62,62,62,-42,62,62,-34,-40,62,62,62,-41,-45,-44,]),'OR':([41,44,47,48,49,50,51,55,58,60,63,70,71,77,78,102,109,118,119,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,-82,-80,-62,-72,-64,-60,-49,-56,110,-62,-49,-48,-61,-49,-63,-81,-79,-71,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),'MOD':([41,44,49,50,51,55,58,60,70,71,77,78,102,109,120,124,125,132,152,154,155,160,161,169,170,],[-53,-55,-62,97,-64,-60,-49,-56,-62,-49,-48,-61,-49,-63,97,-50,-68,-59,-54,-52,-57,-46,-47,-51,-58,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'liststmt':([31,],[40,]),'listarg':([16,68,],[19,112,]),'listexpr':([105,147,],[135,163,]),'arg':([16,25,68,],[20,33,20,]),'field':([22,27,],[28,35,]),'expr2':([31,39,40,57,75,79,91,104,105,107,110,113,116,117,128,142,146,147,156,157,164,165,173,174,175,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'expr3':([31,39,40,57,75,79,82,91,104,105,107,110,113,116,117,128,142,146,147,156,157,164,165,173,174,175,],[48,48,48,48,48,48,119,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'program':([0,],[6,]),'expr6':([31,39,40,46,57,62,75,79,82,89,91,96,104,105,107,110,113,116,117,128,142,146,147,156,157,164,165,173,174,175,],[49,70,49,78,70,109,70,70,70,70,70,70,70,70,70,70,70,70,70,70,49,70,70,70,49,70,70,49,49,49,]),'listitem':([52,58,133,],[99,106,153,]),'expr4':([31,39,40,57,75,79,82,89,91,104,105,107,110,113,116,117,128,142,146,147,156,157,164,165,173,174,175,],[50,50,50,50,50,50,50,120,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'expr5':([31,39,40,57,75,79,82,89,91,96,104,105,107,110,113,116,117,128,142,146,147,156,157,164,165,173,174,175,],[51,51,51,51,51,51,51,51,51,125,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'type':([0,3,16,22,25,27,31,40,68,142,157,173,174,175,],[8,8,21,30,21,30,52,52,21,52,52,52,52,52,]),'addop':([48,119,],[89,89,]),'topdef':([0,3,],[1,11,]),'listtopdef':([0,],[3,]),'stmt':([31,40,142,157,173,174,175,],[56,74,159,168,176,177,178,]),'type_s':([0,3,16,22,25,27,31,40,43,68,101,142,157,173,174,175,],[4,4,4,4,4,4,4,4,76,4,130,4,4,4,4,4,]),'relop':([47,],[82,]),'expr':([31,39,40,57,75,91,104,105,107,110,113,116,117,128,142,146,147,156,157,164,165,173,174,175,],[61,72,61,103,115,122,134,136,138,139,134,143,144,149,61,162,136,167,61,171,172,61,61,61,]),'listfields':([22,],[27,]),'item':([52,58,126,133,],[98,98,148,98,]),'ext':([14,],[17,]),'mulop':([50,120,],[96,96,]),'expr1':([31,39,40,57,75,79,91,104,105,107,110,113,116,117,128,142,146,147,156,157,164,165,173,174,175,],[63,63,63,63,63,118,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'block':([24,31,40,141,142,157,173,174,175,],[32,64,64,158,64,64,64,64,64,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> listtopdef','program',1,'p_program','src/lattepar.py',29),
  ('listexpr -> <empty>','listexpr',0,'p_list_expr','src/lattepar.py',36),
  ('listexpr -> expr','listexpr',1,'p_list_expr','src/lattepar.py',37),
  ('listexpr -> listexpr COMMA expr','listexpr',3,'p_list_expr','src/lattepar.py',38),
  ('listtopdef -> <empty>','listtopdef',0,'p_list_topdef','src/lattepar.py',53),
  ('listtopdef -> topdef','listtopdef',1,'p_list_topdef','src/lattepar.py',54),
  ('listtopdef -> listtopdef topdef','listtopdef',2,'p_list_topdef','src/lattepar.py',55),
  ('liststmt -> stmt','liststmt',1,'p_list_stmt','src/lattepar.py',71),
  ('liststmt -> liststmt stmt','liststmt',2,'p_list_stmt','src/lattepar.py',72),
  ('listfields -> field','listfields',1,'p_list_fields','src/lattepar.py',83),
  ('listfields -> listfields field','listfields',2,'p_list_fields','src/lattepar.py',84),
  ('listitem -> item','listitem',1,'p_list_item','src/lattepar.py',96),
  ('listitem -> listitem COMMA item','listitem',3,'p_list_item','src/lattepar.py',97),
  ('listarg -> <empty>','listarg',0,'p_list_arg','src/lattepar.py',112),
  ('listarg -> arg','listarg',1,'p_list_arg','src/lattepar.py',113),
  ('listarg -> listarg COMMA arg','listarg',3,'p_list_arg','src/lattepar.py',114),
  ('item -> ID','item',1,'p_item_noinit','src/lattepar.py',131),
  ('item -> ID EQUALS expr','item',3,'p_item_init','src/lattepar.py',136),
  ('arg -> type ID','arg',2,'p_arg','src/lattepar.py',144),
  ('field -> type ID SEMI','field',3,'p_field_s','src/lattepar.py',149),
  ('field -> ID ID SEMI','field',3,'p_field_o','src/lattepar.py',154),
  ('field -> ID LARRAY RARRAY ID SEMI','field',5,'p_field_oa','src/lattepar.py',159),
  ('field -> type ID LPAREN listarg RPAREN block','field',6,'p_methoddef','src/lattepar.py',165),
  ('ext -> <empty>','ext',0,'p_class_extends','src/lattepar.py',174),
  ('ext -> EXTENDS ID','ext',2,'p_class_extends','src/lattepar.py',175),
  ('topdef -> CLASS ID ext LBRACE listfields RBRACE','topdef',6,'p_classdef','src/lattepar.py',184),
  ('topdef -> type ID LPAREN listarg RPAREN block','topdef',6,'p_fndef','src/lattepar.py',189),
  ('block -> LBRACE RBRACE','block',2,'p_block','src/lattepar.py',194),
  ('block -> LBRACE liststmt RBRACE','block',3,'p_block','src/lattepar.py',195),
  ('stmt -> SEMI','stmt',1,'p_statement_empty','src/lattepar.py',205),
  ('stmt -> block','stmt',1,'p_statement_block','src/lattepar.py',210),
  ('stmt -> type listitem SEMI','stmt',3,'p_statement_decl','src/lattepar.py',215),
  ('stmt -> ID listitem SEMI','stmt',3,'p_statement_decl_0','src/lattepar.py',220),
  ('stmt -> ID LARRAY RARRAY listitem SEMI','stmt',5,'p_statement_decl_1','src/lattepar.py',225),
  ('stmt -> expr6 EQUALS expr SEMI','stmt',4,'p_statement_var_ass','src/lattepar.py',230),
  ('stmt -> expr6 PLUSPLUS SEMI','stmt',3,'p_statement_incr','src/lattepar.py',235),
  ('stmt -> expr6 MINUSMINUS SEMI','stmt',3,'p_statement_decr','src/lattepar.py',240),
  ('stmt -> RETURN expr SEMI','stmt',3,'p_statement_ret','src/lattepar.py',245),
  ('stmt -> RETURN SEMI','stmt',2,'p_statement_vret','src/lattepar.py',250),
  ('stmt -> IF LPAREN expr RPAREN stmt','stmt',5,'p_statement_cond','src/lattepar.py',255),
  ('stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','stmt',7,'p_statement_condelse','src/lattepar.py',260),
  ('stmt -> WHILE LPAREN expr RPAREN stmt','stmt',5,'p_statement_while','src/lattepar.py',265),
  ('stmt -> expr SEMI','stmt',2,'p_statement_sexp','src/lattepar.py',270),
  ('stmt -> FOR LPAREN type_s ID COL expr RPAREN stmt','stmt',8,'p_statement_for','src/lattepar.py',275),
  ('stmt -> FOR LPAREN ID ID COL expr RPAREN stmt','stmt',8,'p_statement_for_2','src/lattepar.py',280),
  ('expr6 -> NEW type_s LARRAY expr RARRAY','expr6',5,'p_expression_array_init','src/lattepar.py',287),
  ('expr6 -> NEW ID LARRAY expr RARRAY','expr6',5,'p_expression_array_init_2','src/lattepar.py',292),
  ('expr6 -> NEW ID','expr6',2,'p_expression_object_init','src/lattepar.py',297),
  ('expr6 -> ID','expr6',1,'p_expression_var','src/lattepar.py',302),
  ('expr6 -> expr6 DOT ID','expr6',3,'p_expression_field','src/lattepar.py',307),
  ('expr6 -> expr6 DOT ID LARRAY expr RARRAY','expr6',6,'p_expression_field_a','src/lattepar.py',312),
  ('expr6 -> ID LARRAY expr RARRAY','expr6',4,'p_expression_array','src/lattepar.py',317),
  ('expr6 -> NUMBER','expr6',1,'p_expression_int','src/lattepar.py',322),
  ('expr6 -> LPAREN ID RPAREN NULL','expr6',4,'p_expression_null','src/lattepar.py',327),
  ('expr6 -> TRUE','expr6',1,'p_expression_boolean','src/lattepar.py',332),
  ('expr6 -> FALSE','expr6',1,'p_expression_boolean','src/lattepar.py',333),
  ('expr6 -> ID LPAREN listexpr RPAREN','expr6',4,'p_expression_app','src/lattepar.py',338),
  ('expr6 -> expr6 DOT ID LPAREN listexpr RPAREN','expr6',6,'p_expression_method_app','src/lattepar.py',343),
  ('expr6 -> LPAREN expr RPAREN','expr6',3,'p_expression_group','src/lattepar.py',348),
  ('expr6 -> SENTENCE','expr6',1,'p_expression_string','src/lattepar.py',353),
  ('expr5 -> MINUS expr6','expr5',2,'p_expression_neg','src/lattepar.py',358),
  ('expr5 -> expr6','expr5',1,'p_expression_not_1','src/lattepar.py',363),
  ('expr5 -> NOT expr6','expr5',2,'p_expression_not_2','src/lattepar.py',368),
  ('expr4 -> expr5','expr4',1,'p_expression_mul_1','src/lattepar.py',373),
  ('mulop -> TIMES','mulop',1,'p_mulop','src/lattepar.py',378),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','src/lattepar.py',379),
  ('mulop -> MOD','mulop',1,'p_mulop','src/lattepar.py',380),
  ('expr4 -> expr4 mulop expr5','expr4',3,'p_expression_mul_2','src/lattepar.py',385),
  ('addop -> PLUS','addop',1,'p_addop','src/lattepar.py',390),
  ('addop -> MINUS','addop',1,'p_addop','src/lattepar.py',391),
  ('expr3 -> expr3 addop expr4','expr3',3,'p_expression_add_1','src/lattepar.py',396),
  ('expr3 -> expr4','expr3',1,'p_expression_add_3','src/lattepar.py',401),
  ('relop -> LT','relop',1,'p_relop','src/lattepar.py',406),
  ('relop -> LE','relop',1,'p_relop','src/lattepar.py',407),
  ('relop -> GT','relop',1,'p_relop','src/lattepar.py',408),
  ('relop -> GE','relop',1,'p_relop','src/lattepar.py',409),
  ('relop -> EQ','relop',1,'p_relop','src/lattepar.py',410),
  ('relop -> NE','relop',1,'p_relop','src/lattepar.py',411),
  ('expr2 -> expr2 relop expr3','expr2',3,'p_expression_rel_1','src/lattepar.py',416),
  ('expr2 -> expr3','expr2',1,'p_expression_rel_2','src/lattepar.py',421),
  ('expr1 -> expr2 AND expr1','expr1',3,'p_expression_and_1','src/lattepar.py',426),
  ('expr1 -> expr2','expr1',1,'p_expression_and_2','src/lattepar.py',431),
  ('expr -> expr1 OR expr','expr',3,'p_expression_or_1','src/lattepar.py',436),
  ('expr -> expr1','expr',1,'p_expression_or_2','src/lattepar.py',441),
  ('type_s -> INT','type_s',1,'p_type_s','src/lattepar.py',447),
  ('type_s -> STRING','type_s',1,'p_type_s','src/lattepar.py',448),
  ('type_s -> VOID','type_s',1,'p_type_s','src/lattepar.py',449),
  ('type_s -> BOOLEAN','type_s',1,'p_type_s','src/lattepar.py',450),
  ('type -> type_s','type',1,'p_type_1','src/lattepar.py',454),
  ('type -> type_s LARRAY RARRAY','type',3,'p_type_a','src/lattepar.py',458),
]
