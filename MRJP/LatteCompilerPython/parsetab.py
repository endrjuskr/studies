
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xcd1\xf9\x14O#\xa0\xde\xb87\x82\x98a\xc2\x80\xc9'
    
_lr_action_items = {'DIVIDE':([42,43,46,48,52,53,54,55,59,62,64,75,82,83,108,112,116,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,-60,95,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,95,-66,-57,-56,-47,-53,-48,-49,]),'RETURN':([31,41,47,57,60,68,74,77,78,111,115,124,128,130,139,142,150,151,156,158,159,160,161,],[40,40,-32,-30,-10,-33,-39,-31,-11,-43,-38,-36,-37,-34,40,-35,40,-42,-40,40,40,-41,-44,]),'VOID':([0,1,3,11,16,22,25,27,28,31,32,34,36,41,45,47,57,60,68,70,71,73,74,77,78,106,111,115,124,128,130,138,139,142,150,151,156,158,159,160,161,],[2,-6,2,-7,2,2,2,2,-12,2,-29,-13,2,2,2,-32,-30,-10,-33,-28,-24,-23,-39,-31,-11,2,-43,-38,-36,-37,-34,-25,2,-35,2,-42,-40,2,2,-41,-44,]),'NUMBER':([31,40,41,47,49,57,60,61,66,68,74,77,78,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,110,111,113,115,118,119,124,128,130,131,139,142,144,150,151,156,158,159,160,161,],[43,43,43,-32,43,-30,-10,43,43,-33,-39,-31,-11,43,43,-73,-72,43,-74,-76,-71,-75,-67,-68,43,-64,-63,43,-65,43,43,43,43,-43,43,-38,43,43,-36,-37,-34,43,43,-35,43,43,-42,-40,43,43,-41,-44,]),'WHILE':([31,41,47,57,60,68,74,77,78,111,115,124,128,130,139,142,150,151,156,158,159,160,161,],[44,44,-32,-30,-10,-33,-39,-31,-11,-43,-38,-36,-37,-34,44,-35,44,-42,-40,44,44,-41,-44,]),'NEW':([31,40,41,47,49,57,60,61,66,68,74,77,78,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,110,111,113,115,118,119,124,128,130,131,139,142,144,150,151,156,158,159,160,161,],[45,45,45,-32,45,-30,-10,45,45,-33,-39,-31,-11,45,45,-73,-72,45,-74,-76,-71,-75,-67,-68,45,-64,-63,45,-65,45,45,45,45,-43,45,-38,45,45,-36,-37,-34,45,45,-35,45,45,-42,-40,45,45,-41,-44,]),'NULL':([134,],[149,]),'TRUE':([31,40,41,47,49,57,60,61,66,68,74,77,78,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,110,111,113,115,118,119,124,128,130,131,139,142,144,150,151,156,158,159,160,161,],[46,46,46,-32,46,-30,-10,46,46,-33,-39,-31,-11,46,46,-73,-72,46,-74,-76,-71,-75,-67,-68,46,-64,-63,46,-65,46,46,46,46,-43,46,-38,46,46,-36,-37,-34,46,46,-35,46,46,-42,-40,46,46,-41,-44,]),'MINUS':([31,40,41,42,43,46,47,48,51,52,53,54,55,57,59,60,61,62,64,68,74,75,77,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,108,110,111,112,113,115,116,118,119,121,122,123,124,128,130,131,135,139,142,143,144,148,149,150,151,152,153,156,158,159,160,161,],[49,49,49,-45,-52,-54,-32,-58,93,-60,-70,-62,-51,-30,-46,-10,49,-8,-55,-33,-39,-51,-31,-11,49,-50,-59,49,-73,-72,49,-74,-76,-71,-75,-67,-68,49,-64,-63,49,-65,49,49,49,-8,49,-43,-61,49,-38,-9,49,49,93,-69,-66,-36,-37,-34,49,-57,49,-35,-56,49,-47,-53,49,-42,-48,-49,-40,49,49,-41,-44,]),'DOT':([42,62,108,116,],[79,-8,-8,-9,]),'RBRACE':([1,11,27,28,31,32,34,36,41,47,57,60,68,70,71,73,74,77,78,111,115,124,128,130,138,142,151,156,160,161,],[-6,-7,-5,-12,57,-29,-13,70,77,-32,-30,-10,-33,-28,-24,-23,-39,-31,-11,-43,-38,-36,-37,-34,-25,-35,-42,-40,-41,-44,]),'LE':([42,43,46,48,50,51,52,53,54,55,59,62,64,75,82,83,108,112,116,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,86,-78,-60,-70,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,-77,-69,-66,-57,-56,-47,-53,-48,-49,]),'RPAREN':([16,19,20,26,33,42,43,46,48,50,51,52,53,54,59,62,64,67,75,82,83,101,108,109,112,116,117,120,121,122,123,126,127,135,136,137,143,148,149,152,153,154,157,],[-17,24,-18,-22,-19,-45,-52,-54,-58,-80,-78,-60,-70,-62,-46,-8,-55,-82,-51,-50,-59,-2,134,135,-61,-9,139,-79,-77,-69,-66,143,-3,-57,150,-81,-56,-47,-53,-48,-49,-4,159,]),'SEMI':([2,4,5,7,10,15,31,37,39,40,41,42,43,46,47,48,50,51,52,53,54,55,56,57,59,60,62,64,65,67,68,69,74,75,76,77,78,82,83,99,102,103,104,105,111,112,114,115,116,120,121,122,123,124,125,128,130,135,137,139,142,143,145,146,148,149,150,151,152,153,156,158,159,160,161,],[-85,-87,-83,-86,-84,-88,47,71,73,74,47,-45,-52,-54,-32,-58,-80,-78,-60,-70,-62,-51,-14,-30,-46,-10,-8,-55,111,-82,-33,73,-39,-51,115,-31,-11,-50,-59,124,128,-15,130,-20,-43,-61,138,-38,-9,-79,-77,-69,-66,-36,142,-37,-34,-57,-81,47,-35,-56,-16,-21,-47,-53,47,-42,-48,-49,-40,47,47,-41,-44,]),'NE':([42,43,46,48,50,51,52,53,54,55,59,62,64,75,82,83,108,112,116,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,89,-78,-60,-70,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,-77,-69,-66,-57,-56,-47,-53,-48,-49,]),'COL':([147,],[155,]),'LT':([42,43,46,48,50,51,52,53,54,55,59,62,64,75,82,83,108,112,116,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,90,-78,-60,-70,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,-77,-69,-66,-57,-56,-47,-53,-48,-49,]),'RARRAY':([12,38,42,43,46,48,50,51,52,53,54,59,62,64,67,75,82,83,112,116,120,121,122,123,133,135,137,140,141,143,148,149,152,153,],[15,72,-45,-52,-54,-58,-80,-78,-60,-70,-62,-46,-8,-55,-82,-51,-50,-59,-61,-9,-79,-77,-69,-66,148,-57,-81,152,153,-56,-47,-53,-48,-49,]),'COMMA':([2,4,5,7,10,15,16,19,20,26,33,42,43,46,48,50,51,52,53,54,56,59,62,64,67,75,82,83,101,103,104,105,112,116,120,121,122,123,126,127,135,137,143,145,146,148,149,152,153,154,],[-85,-87,-83,-86,-84,-88,-17,25,-18,-22,-19,-45,-52,-54,-58,-80,-78,-60,-70,-62,-14,-46,-8,-55,-82,-51,-50,-59,-2,-15,129,-20,-61,-9,-79,-77,-69,-66,144,-3,-57,-81,-56,-16,-21,-47,-53,-48,-49,-4,]),'PLUS':([42,43,46,48,51,52,53,54,55,59,62,64,75,82,83,108,112,116,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,92,-60,-70,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,92,-69,-66,-57,-56,-47,-53,-48,-49,]),'CLASS':([0,1,3,11,27,28,32,34,36,57,70,71,73,77,138,],[9,-6,9,-7,9,-12,-29,-13,9,-30,-28,-24,-23,-31,-25,]),'$end':([0,1,3,6,11,32,57,70,77,],[-5,-6,-1,0,-7,-29,-30,-28,-31,]),'GT':([42,43,46,48,50,51,52,53,54,55,59,62,64,75,82,83,108,112,116,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,85,-78,-60,-70,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,-77,-69,-66,-57,-56,-47,-53,-48,-49,]),'STRING':([0,1,3,11,16,22,25,27,28,31,32,34,36,41,45,47,57,60,68,70,71,73,74,77,78,106,111,115,124,128,130,138,139,142,150,151,156,158,159,160,161,],[10,-6,10,-7,10,10,10,10,-12,10,-29,-13,10,10,10,-32,-30,-10,-33,-28,-24,-23,-39,-31,-11,10,-43,-38,-36,-37,-34,-25,10,-35,10,-42,-40,10,10,-41,-44,]),'FOR':([31,41,47,57,60,68,74,77,78,111,115,124,128,130,139,142,150,151,156,158,159,160,161,],[58,58,-32,-30,-10,-33,-39,-31,-11,-43,-38,-36,-37,-34,58,-35,58,-42,-40,58,58,-41,-44,]),'SENTENCE':([31,40,41,47,49,57,60,61,66,68,74,77,78,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,110,111,113,115,118,119,124,128,130,131,139,142,144,150,151,156,158,159,160,161,],[48,48,48,-32,48,-30,-10,48,48,-33,-39,-31,-11,48,48,-73,-72,48,-74,-76,-71,-75,-67,-68,48,-64,-63,48,-65,48,48,48,48,-43,48,-38,48,48,-36,-37,-34,48,48,-35,48,48,-42,-40,48,48,-41,-44,]),'PLUSPLUS':([42,55,59,62,116,148,],[-45,99,-46,-8,-9,-47,]),'EQUALS':([42,55,59,62,105,116,148,],[-45,100,-46,-8,131,-9,-47,]),'TIMES':([42,43,46,48,52,53,54,55,59,62,64,75,82,83,108,112,116,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,-60,96,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,96,-66,-57,-56,-47,-53,-48,-49,]),'GE':([42,43,46,48,50,51,52,53,54,55,59,62,64,75,82,83,108,112,116,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,88,-78,-60,-70,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,-77,-69,-66,-57,-56,-47,-53,-48,-49,]),'EXTENDS':([14,],[18,]),'LARRAY':([2,4,5,7,10,29,42,59,62,81,82,108,116,],[-85,12,-83,-86,-84,38,-45,107,-8,118,119,-8,-9,]),'LPAREN':([13,31,40,41,42,44,47,49,55,57,58,59,60,61,62,63,66,68,69,74,75,77,78,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,108,110,111,113,115,116,118,119,124,128,130,131,139,142,144,148,150,151,156,158,159,160,161,],[16,61,61,61,-45,80,-32,61,101,-30,106,-46,-10,61,-8,110,61,-33,16,-39,101,-31,-11,61,61,-73,-72,61,-74,-76,-71,-75,-67,-68,61,-64,-63,61,-65,61,61,61,-8,61,-43,61,-38,-9,61,61,-36,-37,-34,61,61,-35,61,-47,61,-42,-40,61,61,-41,-44,]),'MINUSMINUS':([42,55,59,62,116,148,],[-45,102,-46,-8,-9,-47,]),'ELSE':([47,57,68,74,77,111,115,124,128,130,142,151,156,160,161,],[-32,-30,-33,-39,-31,-43,-38,-36,-37,-34,-35,-42,158,-41,-44,]),'EQ':([42,43,46,48,50,51,52,53,54,55,59,62,64,75,82,83,108,112,116,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,91,-78,-60,-70,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,-77,-69,-66,-57,-56,-47,-53,-48,-49,]),'ID':([2,4,5,7,8,9,10,15,18,21,22,27,28,29,30,31,34,35,40,41,45,47,49,56,57,60,61,66,68,71,72,73,74,77,78,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,110,111,113,115,118,119,124,128,129,130,131,132,138,139,142,144,150,151,155,156,158,159,160,161,],[-85,-87,-83,-86,13,14,-84,-88,23,26,29,29,-12,37,39,62,-13,69,62,62,82,-32,62,105,-30,-10,108,62,-33,-24,114,-23,-39,-31,-11,116,62,62,-73,-72,62,-74,-76,-71,-75,-67,-68,62,-64,-63,62,-65,62,62,62,62,-43,62,-38,62,62,-36,-37,105,-34,62,147,-25,62,-35,62,62,-42,62,-40,62,62,-41,-44,]),'IF':([31,41,47,57,60,68,74,77,78,111,115,124,128,130,139,142,150,151,156,158,159,160,161,],[63,63,-32,-30,-10,-33,-39,-31,-11,-43,-38,-36,-37,-34,63,-35,63,-42,-40,63,63,-41,-44,]),'AND':([42,43,46,48,50,51,52,53,54,55,59,62,64,75,82,83,108,112,116,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,84,-78,-60,-70,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,-77,-69,-66,-57,-56,-47,-53,-48,-49,]),'LBRACE':([14,17,23,24,31,41,47,57,60,68,74,77,78,111,115,124,128,130,139,142,150,151,156,158,159,160,161,],[-26,22,-27,31,31,31,-32,-30,-10,-33,-39,-31,-11,-43,-38,-36,-37,-34,31,-35,31,-42,-40,31,31,-41,-44,]),'FALSE':([31,40,41,47,49,57,60,61,66,68,74,77,78,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,110,111,113,115,118,119,124,128,130,131,139,142,144,150,151,156,158,159,160,161,],[64,64,64,-32,64,-30,-10,64,64,-33,-39,-31,-11,64,64,-73,-72,64,-74,-76,-71,-75,-67,-68,64,-64,-63,64,-65,64,64,64,64,-43,64,-38,64,64,-36,-37,-34,64,64,-35,64,64,-42,-40,64,64,-41,-44,]),'INT':([0,1,3,11,16,22,25,27,28,31,32,34,36,41,45,47,57,60,68,70,71,73,74,77,78,106,111,115,124,128,130,138,139,142,150,151,156,158,159,160,161,],[5,-6,5,-7,5,5,5,5,-12,5,-29,-13,5,5,5,-32,-30,-10,-33,-28,-24,-23,-39,-31,-11,5,-43,-38,-36,-37,-34,-25,5,-35,5,-42,-40,5,5,-41,-44,]),'BOOLEAN':([0,1,3,11,16,22,25,27,28,31,32,34,36,41,45,47,57,60,68,70,71,73,74,77,78,106,111,115,124,128,130,138,139,142,150,151,156,158,159,160,161,],[7,-6,7,-7,7,7,7,7,-12,7,-29,-13,7,7,7,-32,-30,-10,-33,-28,-24,-23,-39,-31,-11,7,-43,-38,-36,-37,-34,-25,7,-35,7,-42,-40,7,7,-41,-44,]),'NOT':([31,40,41,47,57,60,61,68,74,77,78,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,107,110,111,113,115,118,119,124,128,130,131,139,142,144,150,151,156,158,159,160,161,],[66,66,66,-32,-30,-10,66,-33,-39,-31,-11,66,66,-73,-72,66,-74,-76,-71,-75,-67,-68,66,-64,-63,66,-65,66,66,66,66,-43,66,-38,66,66,-36,-37,-34,66,66,-35,66,66,-42,-40,66,66,-41,-44,]),'OR':([42,43,46,48,50,51,52,53,54,55,59,62,64,67,75,82,83,108,112,116,120,121,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,-80,-78,-60,-70,-62,-51,-46,-8,-55,113,-51,-50,-59,-8,-61,-9,-79,-77,-69,-66,-57,-56,-47,-53,-48,-49,]),'MOD':([42,43,46,48,52,53,54,55,59,62,64,75,82,83,108,112,116,122,123,135,143,148,149,152,153,],[-45,-52,-54,-58,-60,98,-62,-51,-46,-8,-55,-51,-50,-59,-8,-61,-9,98,-66,-57,-56,-47,-53,-48,-49,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'liststmt':([31,],[41,]),'chainfield':([31,40,41,49,61,66,80,84,87,94,97,100,101,107,110,113,118,119,131,139,144,150,155,158,159,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'listexpr':([101,],[126,]),'arg':([16,25,],[20,33,]),'field':([22,27,],[28,34,]),'expr2':([31,40,41,61,80,84,100,101,107,110,113,118,119,131,139,144,150,158,159,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'expr3':([31,40,41,61,80,84,87,100,101,107,110,113,118,119,131,139,144,150,158,159,],[51,51,51,51,51,51,121,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'program':([0,],[6,]),'expr6':([31,40,41,49,61,66,80,84,87,94,97,100,101,107,110,113,118,119,131,139,144,150,158,159,],[52,52,52,83,52,112,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'listitem':([56,],[104,]),'expr4':([31,40,41,61,80,84,87,94,100,101,107,110,113,118,119,131,139,144,150,158,159,],[53,53,53,53,53,53,53,122,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'expr5':([31,40,41,61,80,84,87,94,97,100,101,107,110,113,118,119,131,139,144,150,158,159,],[54,54,54,54,54,54,54,54,123,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'var':([31,40,41,49,61,66,80,84,87,94,97,100,101,107,110,113,118,119,131,139,144,150,155,158,159,],[55,75,55,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,55,75,55,157,55,55,]),'type':([0,3,16,22,25,27,31,36,41,139,150,158,159,],[8,8,21,30,21,35,56,8,56,56,56,56,56,]),'addop':([51,121,],[94,94,]),'listarg':([16,],[19,]),'var2':([31,40,41,49,61,66,80,84,87,94,97,100,101,107,110,113,118,119,131,139,144,150,155,158,159,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'topdef':([0,3,27,36,],[1,11,1,11,]),'listtopdef':([0,27,],[3,36,]),'stmt':([31,41,139,150,158,159,],[60,78,151,156,160,161,]),'type_s':([0,3,16,22,25,27,31,36,41,45,106,139,150,158,159,],[4,4,4,4,4,4,4,4,4,81,132,4,4,4,4,]),'relop':([50,],[87,]),'expr':([31,40,41,61,80,100,101,107,110,113,118,119,131,139,144,150,158,159,],[65,76,65,109,117,125,127,133,136,137,140,141,146,65,154,65,65,65,]),'listfields':([22,],[27,]),'item':([56,129,],[103,145,]),'ext':([14,],[17,]),'mulop':([53,122,],[97,97,]),'expr1':([31,40,41,61,80,84,100,101,107,110,113,118,119,131,139,144,150,158,159,],[67,67,67,67,67,120,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'block':([24,31,41,139,150,158,159,],[32,68,68,68,68,68,68,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> listtopdef','program',1,'p_program','src/lattepar.py',29),
  ('listexpr -> <empty>','listexpr',0,'p_list_expr','src/lattepar.py',36),
  ('listexpr -> expr','listexpr',1,'p_list_expr','src/lattepar.py',37),
  ('listexpr -> listexpr COMMA expr','listexpr',3,'p_list_expr','src/lattepar.py',38),
  ('listtopdef -> <empty>','listtopdef',0,'p_list_topdef','src/lattepar.py',53),
  ('listtopdef -> topdef','listtopdef',1,'p_list_topdef','src/lattepar.py',54),
  ('listtopdef -> listtopdef topdef','listtopdef',2,'p_list_topdef','src/lattepar.py',55),
  ('chainfield -> ID','chainfield',1,'p_chain_field','src/lattepar.py',71),
  ('chainfield -> chainfield DOT ID','chainfield',3,'p_chain_field','src/lattepar.py',72),
  ('liststmt -> stmt','liststmt',1,'p_list_stmt','src/lattepar.py',81),
  ('liststmt -> liststmt stmt','liststmt',2,'p_list_stmt','src/lattepar.py',82),
  ('listfields -> field','listfields',1,'p_list_fields','src/lattepar.py',93),
  ('listfields -> listfields field','listfields',2,'p_list_fields','src/lattepar.py',94),
  ('listitem -> <empty>','listitem',0,'p_list_item','src/lattepar.py',106),
  ('listitem -> item','listitem',1,'p_list_item','src/lattepar.py',107),
  ('listitem -> listitem COMMA item','listitem',3,'p_list_item','src/lattepar.py',108),
  ('listarg -> <empty>','listarg',0,'p_list_arg','src/lattepar.py',123),
  ('listarg -> arg','listarg',1,'p_list_arg','src/lattepar.py',124),
  ('listarg -> listarg COMMA arg','listarg',3,'p_list_arg','src/lattepar.py',125),
  ('item -> ID','item',1,'p_item_noinit','src/lattepar.py',142),
  ('item -> ID EQUALS expr','item',3,'p_item_init','src/lattepar.py',147),
  ('arg -> type ID','arg',2,'p_arg','src/lattepar.py',155),
  ('field -> type ID SEMI','field',3,'p_field_s','src/lattepar.py',160),
  ('field -> ID ID SEMI','field',3,'p_field_o','src/lattepar.py',164),
  ('field -> ID LARRAY RARRAY ID SEMI','field',5,'p_field_o_a','src/lattepar.py',168),
  ('ext -> <empty>','ext',0,'p_class_extends','src/lattepar.py',175),
  ('ext -> EXTENDS ID','ext',2,'p_class_extends','src/lattepar.py',176),
  ('topdef -> CLASS ID ext LBRACE listfields listtopdef RBRACE','topdef',7,'p_classdef','src/lattepar.py',185),
  ('topdef -> type ID LPAREN listarg RPAREN block','topdef',6,'p_fndef','src/lattepar.py',189),
  ('block -> LBRACE RBRACE','block',2,'p_block','src/lattepar.py',194),
  ('block -> LBRACE liststmt RBRACE','block',3,'p_block','src/lattepar.py',195),
  ('stmt -> SEMI','stmt',1,'p_statement_empty','src/lattepar.py',205),
  ('stmt -> block','stmt',1,'p_statement_block','src/lattepar.py',210),
  ('stmt -> type listitem SEMI','stmt',3,'p_statement_decl','src/lattepar.py',215),
  ('stmt -> var EQUALS expr SEMI','stmt',4,'p_statement_ass','src/lattepar.py',220),
  ('stmt -> var PLUSPLUS SEMI','stmt',3,'p_statement_incr','src/lattepar.py',225),
  ('stmt -> var MINUSMINUS SEMI','stmt',3,'p_statement_decr','src/lattepar.py',230),
  ('stmt -> RETURN expr SEMI','stmt',3,'p_statement_ret','src/lattepar.py',235),
  ('stmt -> RETURN SEMI','stmt',2,'p_statement_vret','src/lattepar.py',240),
  ('stmt -> IF LPAREN expr RPAREN stmt','stmt',5,'p_statement_cond','src/lattepar.py',245),
  ('stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','stmt',7,'p_statement_condelse','src/lattepar.py',250),
  ('stmt -> WHILE LPAREN expr RPAREN stmt','stmt',5,'p_statement_while','src/lattepar.py',255),
  ('stmt -> expr SEMI','stmt',2,'p_statement_sexp','src/lattepar.py',260),
  ('stmt -> FOR LPAREN type_s ID COL var RPAREN stmt','stmt',8,'p_statement_for','src/lattepar.py',264),
  ('var2 -> chainfield','var2',1,'p_variable_3','src/lattepar.py',269),
  ('var -> var2','var',1,'p_variable_2','src/lattepar.py',273),
  ('var -> var2 LARRAY expr RARRAY','var',4,'p_variable_array','src/lattepar.py',277),
  ('expr6 -> NEW type_s LARRAY expr RARRAY','expr6',5,'p_expression_array_init','src/lattepar.py',283),
  ('expr6 -> NEW ID LARRAY expr RARRAY','expr6',5,'p_expression_array_init_obj','src/lattepar.py',288),
  ('expr6 -> NEW ID','expr6',2,'p_expression_object_init','src/lattepar.py',293),
  ('expr6 -> var','expr6',1,'p_expression_var','src/lattepar.py',298),
  ('expr6 -> NUMBER','expr6',1,'p_expression_int','src/lattepar.py',303),
  ('expr6 -> LPAREN ID RPAREN NULL','expr6',4,'p_expression_null','src/lattepar.py',308),
  ('expr6 -> TRUE','expr6',1,'p_expression_boolean','src/lattepar.py',313),
  ('expr6 -> FALSE','expr6',1,'p_expression_boolean','src/lattepar.py',314),
  ('expr6 -> var LPAREN listexpr RPAREN','expr6',4,'p_expression_app','src/lattepar.py',319),
  ('expr6 -> LPAREN expr RPAREN','expr6',3,'p_expression_group','src/lattepar.py',324),
  ('expr6 -> SENTENCE','expr6',1,'p_expression_string','src/lattepar.py',329),
  ('expr5 -> MINUS expr6','expr5',2,'p_expression_neg','src/lattepar.py',334),
  ('expr5 -> expr6','expr5',1,'p_expression_not_1','src/lattepar.py',339),
  ('expr5 -> NOT expr6','expr5',2,'p_expression_not_2','src/lattepar.py',344),
  ('expr4 -> expr5','expr4',1,'p_expression_mul_1','src/lattepar.py',349),
  ('mulop -> TIMES','mulop',1,'p_mulop','src/lattepar.py',354),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','src/lattepar.py',355),
  ('mulop -> MOD','mulop',1,'p_mulop','src/lattepar.py',356),
  ('expr4 -> expr4 mulop expr5','expr4',3,'p_expression_mul_2','src/lattepar.py',361),
  ('addop -> PLUS','addop',1,'p_addop','src/lattepar.py',366),
  ('addop -> MINUS','addop',1,'p_addop','src/lattepar.py',367),
  ('expr3 -> expr3 addop expr4','expr3',3,'p_expression_add_1','src/lattepar.py',372),
  ('expr3 -> expr4','expr3',1,'p_expression_add_3','src/lattepar.py',377),
  ('relop -> LT','relop',1,'p_relop','src/lattepar.py',382),
  ('relop -> LE','relop',1,'p_relop','src/lattepar.py',383),
  ('relop -> GT','relop',1,'p_relop','src/lattepar.py',384),
  ('relop -> GE','relop',1,'p_relop','src/lattepar.py',385),
  ('relop -> EQ','relop',1,'p_relop','src/lattepar.py',386),
  ('relop -> NE','relop',1,'p_relop','src/lattepar.py',387),
  ('expr2 -> expr2 relop expr3','expr2',3,'p_expression_rel_1','src/lattepar.py',392),
  ('expr2 -> expr3','expr2',1,'p_expression_rel_2','src/lattepar.py',397),
  ('expr1 -> expr2 AND expr1','expr1',3,'p_expression_and_1','src/lattepar.py',402),
  ('expr1 -> expr2','expr1',1,'p_expression_and_2','src/lattepar.py',407),
  ('expr -> expr1 OR expr','expr',3,'p_expression_or_1','src/lattepar.py',412),
  ('expr -> expr1','expr',1,'p_expression_or_2','src/lattepar.py',417),
  ('type_s -> INT','type_s',1,'p_type_s','src/lattepar.py',423),
  ('type_s -> STRING','type_s',1,'p_type_s','src/lattepar.py',424),
  ('type_s -> VOID','type_s',1,'p_type_s','src/lattepar.py',425),
  ('type_s -> BOOLEAN','type_s',1,'p_type_s','src/lattepar.py',426),
  ('type -> type_s','type',1,'p_type_1','src/lattepar.py',430),
  ('type -> type_s LARRAY RARRAY','type',3,'p_type_a','src/lattepar.py',434),
]
